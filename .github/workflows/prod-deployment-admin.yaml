name: Deploy to Prod Admin

on:
  push:
    branches:
      - main-admin-prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Clone the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Create a .env file
      - name: Create .env file
        run: echo "${{ secrets.PROD_LAP_ENV }}" > .env && ls -ltra

      # Step 4: Build and tag the Docker image
      - name: Build Docker image
        run: |
          docker build -f Dockerfile.admin-app-repo -t ${{ secrets.ECR_REPO_NAME_LAP_PROD }}:${{ secrets.IMAGE_TAG_LAP }} .

      # Step 5: Push the Docker image to Amazon ECR
      - name: Push Docker image to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_URI_PROD_LAP }}
          docker push ${{ secrets.ECR_REPO_NAME_LAP_PROD }}:${{ secrets.IMAGE_TAG_LAP }}

      # Step 6: Remove Docker image from GitHub Actions runner
      - name: Remove Docker image from runner
        run: |
          docker rmi ${{ secrets.ECR_REPO_NAME_LAP_PROD }}:${{ secrets.IMAGE_TAG_LAP }}
          
      # Step 7: SSH to the EC2 server and deploy
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST_PROD }}
          username: ${{ secrets.EC2_USER_PROD }}
          key: ${{ secrets.EC2_SSH_KEY_PROD }}
          script: |
            cd ${{ secrets.TARGET_PROD_LAP }}
            docker stop prod-lap || true
            docker system prune -af || true
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}
            docker-compose up -d --force-recreate --no-deps
            docker system prune -af || true
            docker ps -a
            sudo systemctl restart nginx

import React, { useState, useEffect } from 'react';
import {
  Box,
  Container,
  Typography,
  IconButton,
  Stack,
  Grid,
  Tabs,
  Tab,
} from '@mui/material';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import AddIcon from '@mui/icons-material/Add';
import AccessTimeIcon from '@mui/icons-material/AccessTime';
import { useRouter } from 'next/router';
import ContactInformation from '../../components/EmployeeDetails/ContactInformation';
import LearnerDetails from '../../components/EmployeeDetails/LearnerDetails';
import CourseCompletionDetail from '../../components/EmployeeDetails/CourseCompletionDetail';
import ExpandableCourseSection from '../../components/EmployeeDetails/ExpandableCourseSection';
import { EmployeeDetailsData } from '../../components/EmployeeDetails/types';

const EmployeeDetailsPage = () => {
  const router = useRouter();
  const [activeTab, setActiveTab] = useState(0);
  const [employeeData, setEmployeeData] = useState<EmployeeDetailsData | null>(null);

  useEffect(() => {
    const fetchEmployeeDetails = async () => {
      await new Promise((resolve) => setTimeout(resolve, 500));

      const dummyData: EmployeeDetailsData = {
        id: '1',
        name: 'Rahul Somshekhar',
        email: 'rahul.somshekhar@example.com',
        phone: '+91 98765 43210',
        employeeId: 'EMP001',
        dateOfJoining: '15 Jan 2020',
        jobType: 'Full Time',
        department: 'Teaching',
        reportingManager: 'Priya Sharma',
        courseCompletion: {
          mandatory: {
            completed: 8,
            inProgress: 4,
            overdue: 2,
          },
          nonMandatory: {
            completed: 12,
            inProgress: 5,
            overdue: 1,
          },
        },
        overdueCourses: [
          {
            id: '1',
            title: 'Safety Training Module',
            description: 'Workplace safety and emergency procedures',
            image: 'https://via.placeholder.com/300x180/f44336/ffffff?text=Overdue+Course',
          },
        ],
        ongoingCourses: [
          {
            id: '2',
            title: 'Advanced Teaching Methods',
            description: 'Modern pedagogical approaches and techniques',
            image: 'https://via.placeholder.com/300x180/2196f3/ffffff?text=Ongoing+Course+1',
          },
          {
            id: '3',
            title: 'Digital Literacy Program',
            description: 'Technology integration in education',
            image: 'https://via.placeholder.com/300x180/2196f3/ffffff?text=Ongoing+Course+2',
          },
          {
            id: '4',
            title: 'Student Psychology',
            description: 'Understanding student behavior and motivation',
            image: 'https://via.placeholder.com/300x180/2196f3/ffffff?text=Ongoing+Course+3',
          },
        ],
        completedCourses: [
          {
            id: '5',
            title: 'Introduction to Teaching',
            description: 'Basic teaching principles and methodologies',
            completedDate: '15 Aug 2024',
            image: 'https://via.placeholder.com/300x180/4caf50/ffffff?text=Completed+Course+1',
            certificateUrl: 'https://example.com/certificate/5',
          },
          {
            id: '6',
            title: 'Classroom Management',
            description: 'Effective classroom control and discipline',
            completedDate: '10 Sep 2024',
            image: 'https://via.placeholder.com/300x180/4caf50/ffffff?text=Completed+Course+2',
            certificateUrl: 'https://example.com/certificate/6',
          },
        ],
      };

      setEmployeeData(dummyData);
    };

    fetchEmployeeDetails();
  }, []);

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setActiveTab(newValue);
  };

  const handleBack = () => {
    router.back();
  };

  if (!employeeData) {
    return (
      <Box
        sx={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          minHeight: '100vh',
        }}
      >
        <Typography variant="h6">Loading Employee Details...</Typography>
      </Box>
    );
  }

  return (
    <Box sx={{ backgroundColor: '#f5f5f5', minHeight: '100vh', py: 3 }}>
      <Container maxWidth="xl">
        <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 3 }}>
          <IconButton onClick={handleBack} sx={{ backgroundColor: 'white' }}>
            <ArrowBackIcon />
          </IconButton>
          <Typography variant="h5" fontWeight={600}>
            {employeeData.name}
          </Typography>
          <Box sx={{ flexGrow: 1 }} />
          <IconButton
            sx={{
              backgroundColor: '#e3f2fd',
              '&:hover': { backgroundColor: '#bbdefb' },
            }}
          >
            <AddIcon sx={{ color: '#1976d2' }} />
          </IconButton>
          <IconButton
            sx={{
              backgroundColor: '#fce4ec',
              '&:hover': { backgroundColor: '#f8bbd0' },
            }}
          >
            <AccessTimeIcon sx={{ color: '#c2185b' }} />
          </IconButton>
        </Stack>

        <Tabs
          value={activeTab}
          onChange={handleTabChange}
          sx={{
            backgroundColor: 'white',
            borderRadius: 2,
            mb: 3,
            '& .MuiTab-root': {
              textTransform: 'none',
              fontWeight: 600,
            },
          }}
        >
          <Tab label="Learning Progress" />
          <Tab label="Personal Information" />
          <Tab label="Attendance" />
        </Tabs>

        {activeTab === 0 && (
          <Grid container spacing={3}>
            <Grid item xs={12} md={4}>
              <Stack spacing={2}>
                <ContactInformation
                  email={employeeData.email}
                  phone={employeeData.phone}
                />
                <LearnerDetails
                  employeeId={employeeData.employeeId}
                  dateOfJoining={employeeData.dateOfJoining}
                  jobType={employeeData.jobType}
                  department={employeeData.department}
                  reportingManager={employeeData.reportingManager}
                />
              </Stack>
            </Grid>

            <Grid item xs={12} md={8}>
              <Stack spacing={3}>
                <CourseCompletionDetail
                  mandatory={employeeData.courseCompletion.mandatory}
                  nonMandatory={employeeData.courseCompletion.nonMandatory}
                />

                <Stack spacing={2}>
                  <ExpandableCourseSection
                    title="Overdue Courses"
                    count={employeeData.overdueCourses.length}
                    courses={employeeData.overdueCourses}
                    defaultExpanded={true}
                  />
                  
                  <ExpandableCourseSection
                    title="Ongoing Courses"
                    count={employeeData.ongoingCourses.length}
                    courses={employeeData.ongoingCourses}
                    defaultExpanded={false}
                  />
                  
                  <ExpandableCourseSection
                    title="Completed Courses"
                    count={employeeData.completedCourses.length}
                    courses={employeeData.completedCourses}
                    defaultExpanded={false}
                  />
                </Stack>
              </Stack>
            </Grid>
          </Grid>
        )}

        {activeTab === 1 && (
          <Box sx={{ backgroundColor: 'white', p: 3, borderRadius: 2 }}>
            <Typography variant="h6">Personal Information</Typography>
            <Typography variant="body2" color="text.secondary" sx={{ mt: 2 }}>
              Personal information content will be displayed here.
            </Typography>
          </Box>
        )}

        {activeTab === 2 && (
          <Box sx={{ backgroundColor: 'white', p: 3, borderRadius: 2 }}>
            <Typography variant="h6">Attendance</Typography>
            <Typography variant="body2" color="text.secondary" sx={{ mt: 2 }}>
              Attendance records will be displayed here.
            </Typography>
          </Box>
        )}
      </Container>
    </Box>
  );
};

export default EmployeeDetailsPage;
